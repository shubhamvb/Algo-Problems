/*

 Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Note:
You may assume that both strings contain only lowercase letters.

canConstruct("a", "b") -> false
canConstruct("aa", "ab") -> false
canConstruct("aa", "aab") -> true

*/


public class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        if(ransomNote == null || magazine == null)
            return false;
        if(ransomNote.length() == 0 && magazine.length() >= 0)
            return true;
        
        
        HashMap<Character, Integer> hm = new HashMap<>();
        for(int i=0; i<magazine.length(); i++)
        {
            char c = magazine.charAt(i);
            hm.put( c, hm.getOrDefault(c, 0)+1 );
        }
            
        
        for(int i=0; i<ransomNote.length(); i++)
        {   
            char key = ransomNote.charAt(i);
            if(!hm.containsKey(key))
                return false;
            else
            {
                if(hm.get(key) > 0)
                    hm.put(key, hm.get(key)-1);
                else
                    return false;    
            }
            
        }
        return true; 
            
        
         
    }
}
