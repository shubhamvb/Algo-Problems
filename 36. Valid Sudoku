/*
Determine if a Sudoku is valid, according to: Sudoku Puzzles - The Rules.
The Sudoku board could be partially filled, where empty cells are filled with the character '.'.


A partially filled sudoku which is valid.

Note:
A valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.
*/

public class Solution {
    public boolean isValidSudoku(char[][] board) {
        if(board == null)
        System.out.println("here");
        for(int i=0; i<board.length; i++)
        {
            HashSet<Character> row = new HashSet<>();
            for(int j=0; j<board[0].length; j++)
            {
                if(board[i][j] == '.')
                    continue;
                    
                if(row.contains(board[i][j]))
                    return false;
                else
                    row.add(board[i][j]);
            }
            System.out.println(row);
        }
        
        
        for(int i=0; i<board[0].length; i++)
        {
            HashSet<Character> col = new HashSet<>();
            for(int j=0; j<board.length; j++)
            {
                if(board[j][i] == '.')
                    continue;
                    
                if(col.contains(board[j][i]))
                    return false;
                else
                    col.add(board[j][i]);
            }
        }
        
        for(int i=0; i<9; i++)
        {
            HashSet<Character> box = new HashSet<>();
            for(int j=i/3*3; j<i/3*3+3; j++)
            {
                for(int k=i%3*3; k<i%3*3+3; k++)
                {
                    if(board[j][k] == '.')
                        continue;
                    
                    if(box.contains(board[j][k]))
                        return false;
                    else
                        box.add(board[j][k]);
                }
            }
        }
        
        return true;
    }
}
