/*
*/

Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        
      Path p = new Path();
      calc(root, false, p);
      
      return p.sum;
        
    }
    
    private void calc(TreeNode root, boolean isLeft, Path p)
    {
        if(root == null)
            return;
            
        if(root.left == null && root.right == null && isLeft)
            p.sum += root.val;
        //System.out.println(sum);
        calc(root.left, true, p);
        calc(root.right, false, p);
    }
    
}

class Path{
    int sum;
}

