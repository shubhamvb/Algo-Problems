/*
 Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space. 
*/

public class Solution {
    public int firstMissingPositive(int[] nums) {
        int j = 0;
        for(int i = 0; i < nums.length; i++)
        {
            if(nums[i] <= 0)
            {
                int temp = nums[i];
                nums[i] =  nums[j];
                nums[j] = temp;
                j++;
            }
        }
        
        for(int i = j; i < nums.length; i++)
        {
            int index = Math.abs(nums[i]) + j - 1;
            if(index < nums.length && nums[index] > 0 ) 
            {
                nums[index] = 0 - nums[index]; 
            }
               
        }
        
        for(int i = j; i < nums.length; i++)
         if(nums[i] > 0)
            return i-j+1;
        
        return nums.length - j + 1;
    }
}
