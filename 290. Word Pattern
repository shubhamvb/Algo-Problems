/*
Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Examples:

    pattern = "abba", str = "dog cat cat dog" should return true.
    pattern = "abba", str = "dog cat cat fish" should return false.
    pattern = "aaaa", str = "dog cat cat dog" should return false.
    pattern = "abba", str = "dog dog dog dog" should return false.

Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space. 
*/


public class Solution {
    public boolean wordPattern(String pattern, String str) {
        if(pattern == null || pattern.length() == 0)
            return str == null || str.length() == 0;
        
        if(str == null || str.length() == 0)
            return pattern == null || pattern.length() == 0;
        
        char[] p = pattern.toCharArray();
        String[] s = str.split("\\s+");
        
        if(p.length != s.length)
            return false;
        
        HashMap<Character, String> hm = new HashMap<>();
        int index = 0;
        for(char i : p)
        {
            if(hm.containsKey(i))
            {
                if(!hm.get(i).equals(s[index]))
                     return false;
            }    
            else if(hm.containsValue(s[index]))
                return false;
            System.out.println("here");     
            hm.put(i, s[index]);
            index++;
               
        }
        
        return true;
        
    }
}
