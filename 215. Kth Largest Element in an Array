/*
Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

For example,
Given [3,2,1,5,6,4] and k = 2, return 5.

Note:
You may assume k is always valid, 1 ≤ k ≤ array's length.
*/

public class Solution {
    public int findKthLargest(int[] nums, int k) {
        //HashSet<Integer> hs = new HashSet<>();
        int n = -1;
        PriorityQueue<Integer> queue = new PriorityQueue<>();
        for(int i : nums)
        {
            //if(hs.add(i))
                queue.offer(i);
            
            if(queue.size() > k)
                queue.poll();
        }
        
        if(queue.size() < k)
        {
            while( queue.size()>0 )
                n = queue.poll();
            return n;
        }
        else
            return queue.peek();
        
    }
}
