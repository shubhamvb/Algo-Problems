/*
Given a roman numeral, convert it to an integer.
Input is guaranteed to be within the range from 1 to 3999.
*/

public class Solution {
    public int romanToInt(String s) {
        
        HashMap<String,Integer> hm = new HashMap<>();
        hm.put("M",1000);
        hm.put("CM",900);
        hm.put("D",500);
        hm.put("CD",400);
        hm.put("C",100);
        hm.put("XC",90);
        hm.put("L",50);
        hm.put("XL",40);
        hm.put("X",10);
        hm.put("IX",9);
        hm.put("V",5);
        hm.put("IV",4);
        hm.put("I",1);
        
        int strlen = s.length();
        int i = 0,decimalno = 0;
        StringBuilder sb = new StringBuilder(s);
        sb.append("#");
        
        while( i < strlen)
        {
            if(hm.get(sb.substring( i , i + 2 )) != null)
            {
                decimalno += hm.get(sb.substring( i , i + 2 ));
                i += 2;
                
            }
            else
            {
                decimalno += hm.get(sb.substring( i , i + 1 ));
                i += 1;              
            }
        }      
        
        return decimalno;
    }
    
    
}
