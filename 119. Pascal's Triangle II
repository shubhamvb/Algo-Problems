/*
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space? 
*/

public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> result = new ArrayList<>();
        
        if(rowIndex < 0)
            return result;
        
        result.add(1);
        if(rowIndex == 0)
            return result;
        
        for(int i=1; i<= rowIndex+1; i++)
        {
            List<Integer> list = new ArrayList<>();
            list.add(1);
            for(int j=1; j<i-1; j++)
                list.add(result.get(j-1) + result.get(j));
            list.add(1);
            result = list;
           
        }
        
        return result;
    } 
}

