/*
Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting 
from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k 
but greater than or equal to k characters, then reverse the first k characters and left the other as original.

Example:

Input: s = "abcdefg", k = 2
Output: "bacdfeg"

Restrictions:

    The string consists of lower English letters only.
    Length of the given string and k will in the range [1, 10000]

*/



public class Solution {
    public String reverseStr(String s, int k) {
        if(s == null || s.length() == 0)
            return "";
        
        char[] arr = s.toCharArray();
        int l=0, r=0;
        for(int i=0; i<arr.length; i+= 2*k)
        {
            l = i;
            r = Math.min(i+k-1, arr.length-1);
            
            while(l<r)
            {
                char temp = arr[l];
                arr[l] = arr[r];
                arr[r] = temp;
                l++;
                r--;
            }
            
        }
        
        return String.valueOf(arr);
         
    }
}
