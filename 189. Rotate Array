/*
Rotate an array of n elements to the right by k steps.

For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].

Note:
Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem. 
*/


public class Solution {
    public void rotate(int[] nums, int k) {
        
        if(nums == null || nums.length == 0 || nums.length == 1)
            return;
        if(k == 0)
            return;
        
        k = k % nums.length;
            
        reverseArray(nums, 0, nums.length - k - 1);
        reverseArray(nums, nums.length - k, nums.length - 1);
        reverseArray(nums, 0, nums.length - 1);
        
    }
    
    private void reverseArray(int nums[], int l, int r)
    {
        if(nums == null || nums.length == 0 || nums.length == 1)
            return;
            
        while(l < r)
        {
            int temp = nums[r];
            nums[r] = nums[l];
            nums[l] = temp;
            r--;
            l++;
        } 
    }
}
