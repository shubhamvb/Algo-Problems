/*
Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example:

Input: "babad"
Output: "bab"

Note: "aba" is also a valid answer.

Example:

Input: "cbbd"
Output: "bb"

*/

public class Solution {
    public String longestPalindrome(String s) {
        if(s.length() == 1 || s.length() == 0)
            return s;
        int maxLength = 0, start = 0, end = 0;
        for(int i=0; i<s.length(); i++)
        {
            int len1 = calcLengthAroundCenter(s, i, i);
            int len2 = calcLengthAroundCenter(s, i, i+1);
            int len = Math.max(len1,len2);
            if(len > maxLength)
            {
                maxLength = len;
                start = i - (len - 1) / 2;
                end = i + len / 2;
            }
        }
        return s.substring(start, end+1);
        
    }
    
    private int calcLengthAroundCenter(String s, int left, int right)
    {
        while(left>=0 && right<=s.length()-1 && s.charAt(left) == s.charAt(right))
        {
            left--;
            right++;
        }
        return right - left - 1;
    }
}
