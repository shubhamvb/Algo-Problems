/*
There are two sorted arrays nums1 and nums2 of size m and n respectively.
Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

Example 1:
nums1 = [1, 3]
nums2 = [2]
The median is 2.0

Example 2:
nums1 = [1, 2]
nums2 = [3, 4]
The median is (2 + 3)/2 = 2.5

*/

public class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int length = nums1.length + nums2.length ;
        int i = 0;
        int nums1Tracker = 0 , nums2Tracker = 0;
        int outputArray[] = new int[length];

        while( i < length )
        {
            if( nums1Tracker >= nums1.length )
            {
                outputArray[ i ] = nums2[ nums2Tracker ];
                nums2Tracker++;
                i++;
                continue;
            }

            if( nums2Tracker >= nums2.length )
            {
                outputArray[ i ] = nums1[ nums1Tracker ];
                nums1Tracker++;
                i++;
                continue;
            }

            if( nums1[ nums1Tracker ] < nums2[ nums2Tracker ] )
            {
                outputArray[ i ] = nums1[ nums1Tracker ];
                nums1Tracker++;
                i++;

            }
            else
            {
                outputArray[ i ] = nums2[ nums2Tracker ];
                nums2Tracker++;
                i++;
            }

        }

        if( outputArray.length % 2 != 0 )
            return (double)outputArray[ length / 2 ];
        else
            return ( (double) ( outputArray[ ( length -1 ) / 2 ] + outputArray[ length / 2 ] ) / 2 );

        
        
    }
}
