/*
Given a linked list, determine if it has a cycle in it.

Follow up:
Can you solve it without using extra space?
*/

/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
 
public class Solution {
    public boolean hasCycle(ListNode head) {
        
        ListNode first = head ,  second = head;
        int counter = 0;
        while( first != null && first.next != null )
        {
            if( first == second )
                counter++;
            first = first.next.next;
            second =  second.next;
            
            if( counter == 2 )
                return true;
        }
        return false;
        
    }
}
