/*
Given a non-empty integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.

You may assume the array's length is at most 10,000.

Example:

Input:
[1,2,3]

Output:
2

Explanation:
Only two moves are needed (remember each move increments or decrements one element):

[1,2,3]  =>  [2,2,3]  =>  [2,2,2]

*/


public class Solution {
    public int minMoves2(int[] nums) {
        if(nums == null || nums.length == 0)
            return 0;
            
        int target = -1;
        int sum  = 0;
        Arrays.sort(nums);
       
        target = nums[nums.length/2];
        for(int i : nums)
            sum += Math.abs(i-target);
        
        return sum;
        
    }
}
