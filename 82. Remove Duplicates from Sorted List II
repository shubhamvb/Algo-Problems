 Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3. 
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null)
            return head;
        ListNode tempHead = new ListNode(0);
        tempHead.next = head;
        ListNode n = tempHead;
        
        while(n.next != null && n.next.next != null)
        {
            if(n.next.val == n.next.next.val)
            {
                int duplicate = n.next.val;
                while(n.next!= null && n.next.val == duplicate)
                {
                    n.next = n.next.next;
                }
            }   
            else
                n = n.next;
        }
        
        return tempHead.next;
        
    }
}
